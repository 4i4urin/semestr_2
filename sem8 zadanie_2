#include <stdio.h>
#include <stdlib.h>
#include <time.h>


#define SWAP(a, b) int temp = a; a = b; b = temp;
#define SWAP_POINT(a_p, b_p) char* temp_p = a_p; a_p = b_p; b_p = temp_p;


char* input(int* k);
void quick_sort(int*, int, int, char**);

int main(int argc, char const *argv[])
{
	int N, k = 0;
	scanf("%d", &N);
	char** arr = (char**)calloc(N + 1, sizeof(char*));
	int* a = (int*)calloc(N, sizeof(int));
	for (int i = 0; i < N; ++i)
	{
		arr[i] = input(&k);
		a[i] = k;
	}
	printf("\n");
	quick_sort(a, 0, N - 1, arr);
	for (int i = 0; i < N; ++i)
		printf("%s", arr[i]);
	// for (int i = 0; i < N; ++i)
	// 	printf("%d\n", a[i]);

	return 0;
}

void quick_sort(int* a, int left, int right, char** arr)
{
	int i, j, p, y;
	srand(time(NULL));
	i = left; j = right;
	y = left + rand() % (right - left);
	p = a[y];
	do 
	{
		while ((a[i] < p) && (i < right)) i++;
		while ((a[j] > p) && (j > left)) j--;
		if (i <= j)
		{
			SWAP(a[i], a[j]);
			SWAP_POINT(arr[i], arr[j]);
			i++; j--;
		}
	} while (i <= j);
	if (left < j) quick_sort(a, left, j, arr);
	if (right > i) quick_sort(a, i, right, arr);
}

char* input(int* k)
{
	char* ptr = (char*)calloc(1, sizeof(char));
	int c, i = 0;
	c = getchar();
	if (c == '\n')
		c = getchar();
	do
	{
		*(ptr + i) = c;
		i += 1;
		ptr = (char*)realloc(ptr, (i + 1) * sizeof(char));
		c = getchar();
	} while (c!= '\n');
	*(ptr + i) = c;
	ptr = (char*)realloc(ptr, (i + 1) * sizeof(char));
	*(ptr + i + 1) = '\0';
	*k = i;
	return ptr;
}
